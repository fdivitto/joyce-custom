#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language english
\inputencoding latin1
\fontscheme times
\graphics default
\paperfontsize default
\spacing single 
\papersize a4paper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Section*

JOYCE for PCW programmers
\layout Standard

JOYCE makes the following special opcodes available to Z80 programs.
 Some functions may only be present in certain versions; in this case, a
 version number in brackets, such as (v1.28+) will show the minimum version
 that supports this call.
 If so, programs must first check that the JOYCE version number is greater
 than or equal to the number shown.
\layout Subsection*

ED FD: Replace BIOS function
\layout Standard

If this opcode is executed at 0FC4Eh, reads the PC's real-time clock and
 sets the time fields of the SCB.
 Thus the BIOS "TIME" jump can be replaced by 0EDh 0FDh 0C9h.
 This is done by RTC.COM.
 
\layout Standard

(v1.28+) Similarly, this can be inserted at 0FC0Fh (LIST) and 0FC2Dh (LISTST)
 to capture printing - CENPORT.COM does this.
\layout Standard

In ANNE, the same instruction sequence is inserted automatically into the
 Rosanne BIOS jumpblock by the 'Rosanne Acceleration' menu.
\layout Standard

In the future, other functions may be replaced in this way.
\layout Subsection*

ED FE: JOYCE API.
 
\layout Standard

This is the main entry point for JOYCE functions.
 What function is executed is determined by the A register.
\layout Subsubsection*

A=0: Test for JOYCE.
 
\layout Standard

Returns A=0FFh, HL=JOYCE version number (packed BCD).
 If A is not 0 and not 0FFh, then JOYCE has been changed in a way that would
 break existing programs.
\layout Subsubsection*

A=1: Boot.
 
\layout Standard

Enter with B = boot disc number (boot
\emph on 
b
\emph toggle 
.dsk).
 Reads the first sector and jumps to it.
 Only returns if the disc was not bootable.
 
\layout Subsubsection*

A=2: Set screen colours.
 
\layout Standard

Enter with BCD = RGB for "white", EHL = RGB for "black".
\layout Subsubsection*

A=3: FID_D_LOGIN for JOYCEDRV.FID
\layout Standard

Parameters and results as for the corresponding Z80 routine.
\layout Subsubsection*

A=4: FID_D_READ for JOYCEDRV.FID
\layout Standard

Parameters and results as for the corresponding Z80 routine.
\layout Subsubsection*

A=5: FID_D_WRITE for JOYCEDRV.FID
\layout Standard

Parameters and results as for the corresponding Z80 routine.
\layout Subsubsection*

A=6: FID_D_FLUSH for JOYCEDRV.FID
\layout Standard

Parameters and results as for the corresponding Z80 routine.
\layout Subsubsection*

A=7: FID_EMS helper for JOYCEDRV.FID 
\layout Standard

Enter with:
\layout Description

BC= FID flags.
 If C=0FFh, the FID only supports MYZ80-format hard drives.
\layout Description

D= reason for call:
\begin_deeper 
\layout Description

0: Drive successfully added (drive number in E).
\layout Description

1: Drive not added - no memory available
\layout Description

2: Drive not added - all drive letters in use
\layout Description

3: Incorrect FID environment - JOYCEDRV cannot run.
\layout Description

4: Initialise - this is the first call made to this function by JOYCEDRV.FID.
\end_deeper 
\layout Description

HL= address of message buffer; messages can be copied to here by JOYCE.
\layout Standard

Returns:
\layout Description

A=0 Return with carry clear and message at HL.
\layout Description

A=1 Return with carry set and message at HL.
\layout Description

A=2 Attempt to add a drive.
 B=drive number; HL IX IY hold parameters for the SVC_D_HOOK routine.
\layout Subsubsection*

A=8: Save JOYCE settings.
\layout Subsubsection*

A=9: Set/Get current LPT port.
\layout Standard

(DOS only) This call does not have any effect in JOYCE 1.9.0+.
 In earlier versions, it switches to the LPT port indicated by DE, and returns
 the previous port number in HL..
 DE=0,1,2 for LPT1, LPT2, LPT3; or 0FFFFh to return current assignment in
 HL.
\layout Subsubsection*

A=10: Operations on host filesystem files.
 
\layout Standard

The operations are selected using the C register:
\layout Description

C=0Fh: Open existing file for read/write.
 DE->pathname (0 terminated).
 Returns HL=handle or 0 if failed.
\layout Description

C=10h: Close file.
 DE=handle.
 Returns HL=0 if failed, 1 if OK.
\layout Description

C=14h: Read byte from open file.
 DE=handle.
 Returns byte in B; HL=0 if end of file, 1 if OK.
\layout Description

C=15h: Write a byte to open file.
 DE=handle, B=byte.
 Returns HL=0 if failed, 1 if OK.
\layout Description

C=16h: Create new file for read/write, DE->name (0 terminated).
 Returns HL=0 if failed, file handle if succeeded.
\layout Description

C=69h: Get the local time from the PC clock.
 DE->time buffer (in CP/M datestamp format).
 Returns A=BCD seconds, and buffer filled.
\layout Description

C=91h: Expand filename with wildcards.
\begin_deeper 
\layout Description

DE-> ambiguous filename, 0-terminated.
\layout Description

HL-> result buffer
\layout Description

B= which file (0=first, 1=second...)
\layout Standard

Returns HL=0 if not found, 1 if found.
 
\layout Standard

First 11 bytes of buffer hold filename in FCB form
\layout Standard

Remainder of buffer holds ASCIIZ filename with path
\end_deeper 
\layout Subsubsection*

A=11: (v1.10+) Screen operations 
\layout Standard

The subfunction to perform is given in the C register:
\layout Description

0 Select standard emulated PCW screen.
\layout Description

1 Select 800x600x256 screen.
\layout Description

2 Write character in E to the 800x600 screen.
\layout Description

3 Write status line character in E to the 800x600 screen.
\layout Description

4 (v1.20+) Execute a GSX call.
 DE->GSX PB
\layout Description

5 FID_EMS helper for VGA.FID.
 Expands an error number in D to a message at HL.
 Error numbers are:
\begin_deeper 
\layout Description

0 OK.
\layout Description

1 Device table full
\layout Description

2 Attempt to load VGA.FID twice
\layout Description

3 CP/M environment is not compatible.
\end_deeper 
\layout Description

6 (v1.20+) Get capabilities bitmap for screen into HL.
 
\begin_deeper 
\layout Description

Bit\SpecialChar ~
0 set if 800x600 mode is possible.
 
\layout Description

Bit\SpecialChar ~
1 set if GSX is possible (versions 1.20 to 1.36, and 2.1.7 onward).
\layout Description

Bit\SpecialChar ~
2 set if LIOS is possible.
\layout Standard

Other bits of HL, DE BC IX IY all zero (reserved)
\layout Standard

For versions < 1.10, none of these is possible.
\layout Standard

For versions < 1.20, 800x600 mode (only) is possible.
\end_deeper 
\layout Subsubsection*

A=12: (v1.12+) Keyboard operations
\layout Standard

The subfunction is given by C:
\layout Description

0: Get mapping for key DE, into HL.
\layout Description

1: Set mapping for key DE, in HL.
\layout Description

2: Set mapping for <DE> keys, at (IX).
 Each mapping is 4 bytes: 
\layout LyX-Code

DW de_value
\layout LyX-Code

DW hl_value
\layout Standard

In each case, the 
\begin_inset Quotes eld
\end_inset 

de_value
\begin_inset Quotes erd
\end_inset 

 is the SDL key number (see SDL_keysym.h).
 The low byte of the 
\begin_inset Quotes eld
\end_inset 

hl_value
\begin_inset Quotes erd
\end_inset 

 is the offset of the byte corresponding to the key, minus 0FFF0h (so it
 will be 0-16; 0-15 for PCW keys and 16 for JOYCE special functions).
 The high byte of the 
\begin_inset Quotes eld
\end_inset 

hl_value
\begin_inset Quotes erd
\end_inset 

 is the mask of bits to set/clear in that byte.
\layout Subsubsection*

A=13: (v1.21-v1.36) Serial port operations
\layout Standard

This function is a stub in v1.9.0+; serial comms should instead go via the
 emulated CPS8256.
 All the subfunctions may still be called, but they will either be no-ops
 or return dummy values.
\layout Standard

C = subfunction:
\layout Description

0: Reset buffers
\layout Description

1: Set handshaking lines.
 E=lines:
\begin_deeper 
\layout Description

bit\SpecialChar ~
0 => DTR
\layout Description

bit\SpecialChar ~
1 => RTS
\layout Description

bit\SpecialChar ~
2 => USER
\layout Description

bit\SpecialChar ~
4 => LOOPBACK
\end_deeper 
\layout Description

2: Set Baud rate & stop bits
\begin_deeper 
\layout Description

HL= encoded baud rate.
\layout LyX-Code

 1:50     2:75     3:110    4:134    5:150
\layout LyX-Code

 6:300    7:600    8:1200   9:1800  10:2400
\layout LyX-Code

11:3600  12:4800  13:7200  14:9600
\layout LyX-Code

15:19200 16:14400 17:28800 18:33600
\layout LyX-Code

19:38400 20:57600 21:115200
\layout Description

E= settings:
\begin_deeper 
\layout Description

bit\SpecialChar ~
0 set for 8-bits, reset for 7
\layout Description

bit\SpecialChar ~
1 = 1
\layout Description

bit\SpecialChar ~
2 set for 2 stop bits, reset for 1
\layout Description

bit\SpecialChar ~
3 set if parity, else 0
\layout Description

bit\SpecialChar ~
4 set if parity even, clear if odd
\end_deeper 
\end_deeper 
\layout Description

3: Character input status.
 Returns A=0 if no character available, 1 if there is.
\layout Description

4: Poll for character, return it in A (A=0 if none)
\layout Description

5: Character output status.
 Returns A=0 if no, 1 if yes
\layout Description

6: Output character in E
\layout Description

7: FID_EMS helper for COM port FID
\layout Description

8: Switch to using COM port no.
 E
\layout Description

9: Get COM port no.
 into A
\layout Subsubsection*

A=14: (v1.22+) FID_D_MESSAGE for JOYCEDRV.FID
\layout Standard

All parameters and results the same as for the corresponding Z80 routine.
\layout Subsubsection*

A=15: (v1.22+) Call the Logo I/O system.
\layout Itemize

E = LIOS function number; SP->parameters.
 Results returned in HL 
\layout Itemize

E=0FFh to initialise, SP->DW address of info area, HL=address of message
 area.
 Returns HL=0 if error, 1 if OK
\layout Subsubsection*

A=16: (v1.22+) Parse the boot list (joycebt.xml).
\layout Standard

B=number of boot disc (0-9, or 0FFh).
 HL->16-byte buffer for name.
 
\layout Standard

Returns A=1 if entry exists, else 0.
\layout Standard

(v1.9.0+) If B = 0FFh, special function in C.
 Returns A=1 if OK, A=0 if function not supported.
 Special function is:
\layout Description

0 Choose boot disc using JOYCE menus, not Z80 code.
 
\layout Description

1 Display helpscreen.
 
\layout Standard

This function is present in ANNE (v2.1.2+) but if B=0FFh it always returns
 A=0.
\layout Subsubsection*

A=0FCh: (v1.30+) BDOS filter for REDIR.COM and its programs.
 
\layout Standard

Entered with:
\layout Itemize

Carry set.
 
\layout Itemize

C = BDOS function 
\layout Itemize

DE = BDOS parameter 
\layout Itemize

HL = address of REDIR.RSX in memory.
\layout Standard

Returns Carry set to continue BDOS call, Carry clear to return to caller.
\layout Subsubsection*

A=0FDh: (v1.27+) Poll the mouse
\layout Standard

If an automatic mouse patch has been applied, this will update the correct
 memory locations with the mouse coordinates and button status.
 If no such patch has been applied, nothing happens.
\layout Subsubsection*

A=0FEh: Set / Get timing parameters.
\layout Standard

This allows the timing of JOYCE functions to be adjusted.
\layout Standard

A:=Screen refresh rate (900 / Hz value).
\layout Standard

HL=Number of Z80 cycles that should be executed every 
\begin_inset Formula $\frac{1}{900}$
\end_inset 

of a second.
 
\layout Standard

C = if nonzero, new refresh rate (900 / Hz).
\layout Standard

DE = if nonzero, new number of Z80 cycles to execute every 
\begin_inset Formula $\frac{1}{900}$
\end_inset 

of a second.
 This changes the ratio between the speed of the processor and the speed
 of the PCW, rather than the overall speed.
\layout Standard

Since JOYCE v2.x has automatic speed regulation, it should not be necessary
 to alter these figures from program code.
\layout Subsection*

ED FF: (v2.1.2+) Stop emulation.
\layout Standard

This opcode causes the emulated Z80 to stop.
 In normal use, it will cause the emulator to shut down instantly without
 asking for confirmation.
\layout Standard

It is also used by the emulators if a native code function needs to call
 a Z80 function (JOYCE does not do this at the moment, but ANNE does).
 At the end of the Z80 function, the ED FF opcode will be executed to return
 to native code.
\the_end
